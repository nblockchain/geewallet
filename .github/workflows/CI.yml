name: CI

on: [push, pull_request, workflow_dispatch]

# FIXME: figure out why we need to clean after make if we
# want 'make strict' target to really happen without
# assuming the binaries from previous build are good
# (msbuild bug?)

jobs:
  macOS:
    runs-on: macOS-latest
    steps:
    - uses: actions/checkout@v1
      with:
        submodules: false
    - name: install maui workload
      run: dotnet workload install maui
    - name: configure
      run: ./configure.sh
    - name: build in DEBUG mode
      run: make
    - name: sanity check
      run: make sanitycheck
    - name: unit tests
      run: make check
    - name: build in STRICT mode
      run: git clean -fdx && ./configure.sh && make strict
    - name: build in RELEASE mode
      run: git clean -fdx && ./configure.sh && make release
    # TODO: use fsx's scripts compilation when we migrate to .NET6 (to use `#r "nuget: Microsoft.Build"` instead of `#r "../.nuget/packages/Microsoft.Build.16.11.0/lib/net472/Microsoft.Build.dll"`)
    #- name: compile .fsx scripts
    #  run: dotnet fsi ./scripts/fsx/compileFSharpScripts.fsx
    - name: integration tests
      run: make update-servers

  windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v1
      with:
        submodules: false
    - name: configure
      run: .\configure.bat
    - name: build in DEBUG mode
      run: .\make.bat
    - name: sanity check
      run: .\make.bat sanitycheck
    - name: unit tests
      run: .\make.bat check
    - name: re-build in STRICT mode
      run: git clean -fdx && .\configure.bat && .\make.bat strict
    - name: re-build in RELEASE mode
      run: git clean -fdx && .\configure.bat && .\make.bat release
    # TODO: use fsx's scripts compilation when we migrate to .NET6 (to use `#r "nuget: Microsoft.Build"` instead of `#r "../.nuget/packages/Microsoft.Build.16.11.0/lib/net472/Microsoft.Build.dll"`)
    #- name: compile .fsx scripts
    #  run: dotnet fsi ./scripts/fsx/compileFSharpScripts.fsx
    - name: integration tests
      run: .\make update-servers

  linux22-github:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v1
      with:
        submodules: false
    - name: install missing dependencies
      run: sudo apt install --yes fsharp nunit-console
    - name: check mono version
      run: mono --version
    - name: configure
      run: ./configure.sh
    - name: build in DEBUG mode
      run: make
    - name: sanity check
      run: make sanitycheck
    - name: unit tests
      run: make check
    - name: build in STRICT mode
      run: git clean -fdx && ./configure.sh && make strict
    - name: build in RELEASE mode
      run: git clean -fdx && ./configure.sh && make release
    - name: integration tests
      run: make update-servers

  linux22-github--newmono:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v1
      with:
        submodules: false
    - name: install missing dependencies
      run: sudo apt install --yes fsharp nunit-console
    - name: install last version of mono (Microsoft APT repositories)
      run: sudo ./scripts/install_mono_from_microsoft_deb_packages.sh
    - name: check mono version
      run: mono --version
    - name: install GTK libs (dependency of GTK frontend)
      run: sudo apt install -y libgtk2.0-cil-dev
    - name: configure
      run: ./configure.sh
    - name: build in DEBUG mode (retry 3 times because of flakey XamForms restore)
      # TODO: remove retry when we migrate to .NET6
      run: make || make || make || make
    - name: sanity check
      run: make sanitycheck
    - name: unit tests
      run: make check
    - name: build in STRICT mode
      run: git clean -fdx && ./configure.sh && make strict
    - name: build in RELEASE mode
      run: git clean -fdx && ./configure.sh && make release
    - name: integration tests
      run: make update-servers

  linux22-vanilla--stockmono:
    runs-on: ubuntu-22.04
    container:
      image: "ubuntu:22.04"
    steps:
    - uses: actions/checkout@v1
    # can't use the option below because of error "Input 'submodules' not supported when falling back to download using the GitHub REST API. To create a local Git repository instead, add Git 2.18 or higher to the PATH."
    #  with:
    #    submodules: 'true'

    - name: install sudo
      run: apt update && apt install --yes sudo
    - name: install all dependencies
      run: sudo DEBIAN_FRONTEND=noninteractive apt install --yes git make curl fsharp nunit-console

    # workaround for https://github.com/actions/runner/issues/2033
    - name: ownership workaround
      run: git config --global --add safe.directory '*'

    - name: check mono version
      run: mono --version
    - name: configure
      run: ./configure.sh
    - name: build in DEBUG mode
      run: make
    - name: sanity check
      run: make sanitycheck
    - name: unit tests
      run: make check
    - name: build in STRICT mode
      run: git clean -fdx && ./configure.sh && make strict
    - name: build in RELEASE mode
      run: git clean -fdx && ./configure.sh && make release
    # TODO: use fsx's scripts compilation when we migrate to .NET6 (to use `#r "nuget: Microsoft.Build"` instead of `#r "../.nuget/packages/Microsoft.Build.16.11.0/lib/net472/Microsoft.Build.dll"`)
    #- name: compile .fsx scripts
    #  run: dotnet fsi ./scripts/fsx/compileFSharpScripts.fsx
    - name: integration tests
      run: make update-servers

  linux22-vanilla--newmono:
    runs-on: ubuntu-22.04
    container:
      image: "ubuntu:22.04"
    steps:
    - uses: actions/checkout@v1
    # can't use the option below because of error "Input 'submodules' not supported when falling back to download using the GitHub REST API. To create a local Git repository instead, add Git 2.18 or higher to the PATH."
    #  with:
    #    submodules: 'true'

    - name: install sudo
      run: apt update && apt install --yes sudo
    - name: install all dependencies
      run: sudo DEBIAN_FRONTEND=noninteractive apt install --yes git make curl fsharp nunit-console
    - name: install last version of mono (Microsoft APT repositories)
      run: sudo ./scripts/install_mono_from_microsoft_deb_packages.sh

    # workaround for https://github.com/actions/runner/issues/2033
    - name: ownership workaround
      run: git config --global --add safe.directory '*'

    - name: check mono version
      run: mono --version
    - name: install GTK libs (dependency of GTK frontend)
      run: sudo apt install -y libgtk2.0-cil-dev
    - name: configure
      run: ./configure.sh
    - name: build in DEBUG mode (retry 3 times because of flakey XamForms restore)
      # TODO: remove retry when we migrate to .NET6
      run: make || make || make || make
    - name: sanity check
      run: make sanitycheck
    - name: unit tests
      run: make check
    - name: build in STRICT mode
      run: git clean -fdx && ./configure.sh && make strict
    - name: build in RELEASE mode
      run: git clean -fdx && ./configure.sh && make release
    - name: integration tests
      run: make update-servers


  linux20-github:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v1
      with:
        submodules: false
    - name: install missing dependencies
      run: sudo apt install --yes fsharp nunit-console
    - name: check mono version
      run: mono --version
    - name: configure
      run: ./configure.sh
    - name: build in DEBUG mode
      run: make
    - name: sanity check
      run: make sanitycheck
    - name: unit tests
      run: make check
    - name: build in STRICT mode
      run: git clean -fdx && ./configure.sh && make strict
    - name: build in RELEASE mode
      run: git clean -fdx && ./configure.sh && make release
    - name: integration tests
      run: make update-servers

  linux20-github--newmono:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v1
    - name: install missing dependencies
      run: sudo apt install --yes fsharp nunit-console
    - name: install last version of mono (Microsoft APT repositories)
      run: sudo ./scripts/install_mono_from_microsoft_deb_packages.sh
    - name: check mono version
      run: mono --version
    - name: install GTK libs (dependency of GTK frontend)
      run: sudo apt install -y libgtk2.0-cil-dev
    - name: configure
      run: ./configure.sh
    - name: build in DEBUG mode (retry 3 times because of flakey XamForms restore)
      # TODO: remove retry when we migrate to .NET6
      run: make || make || make || make
    - name: sanity check
      run: make sanitycheck
    - name: unit tests
      run: make check
    - name: build in STRICT mode
      run: git clean -fdx && ./configure.sh && make strict
    - name: build in RELEASE mode
      run: git clean -fdx && ./configure.sh && make release
    - name: integration tests
      run: make update-servers

  linux20-vanilla--stockmono:
    runs-on: ubuntu-20.04
    container:
      image: "ubuntu:20.04"
    steps:
    - uses: actions/checkout@v1
    # can't use the option below because of error "Input 'submodules' not supported when falling back to download using the GitHub REST API. To create a local Git repository instead, add Git 2.18 or higher to the PATH."
    #  with:
    #    submodules: 'true'

    - name: install sudo
      run: apt update && apt install --yes sudo
    - name: install all dependencies
      run: sudo apt install --yes git make curl fsharp nunit-console

    # workaround for https://github.com/actions/runner/issues/2033
    - name: ownership workaround
      run: git config --global --add safe.directory '*'

    - name: check mono version
      run: mono --version
    - name: configure
      run: ./configure.sh
    - name: build in DEBUG mode
      run: make
    - name: sanity check
      run: make sanitycheck
    - name: unit tests
      run: make check
    - name: build in STRICT mode
      run: git clean -fdx && ./configure.sh && make strict
    - name: build in RELEASE mode
      run: git clean -fdx && ./configure.sh && make release
    - name: integration tests
      run: make update-servers

  linux20-vanilla--newmono:
    runs-on: ubuntu-20.04
    container:
      image: "ubuntu:20.04"
    steps:
    - uses: actions/checkout@v1
    # can't use the option below because of error "Input 'submodules' not supported when falling back to download using the GitHub REST API. To create a local Git repository instead, add Git 2.18 or higher to the PATH."
    #  with:
    #    submodules: 'true'

    - name: install sudo
      run: apt update && apt install --yes sudo
    - name: install all dependencies
      run: sudo apt install --yes git make curl fsharp nunit-console
    - name: install last version of mono (Microsoft APT repositories)
      run: sudo ./scripts/install_mono_from_microsoft_deb_packages.sh

    # workaround for https://github.com/actions/runner/issues/2033
    - name: ownership workaround
      run: git config --global --add safe.directory '*'

    - name: check mono version
      run: mono --version
    - name: install GTK libs (dependency of GTK frontend)
      run: sudo apt install -y libgtk2.0-cil-dev
    - name: configure
      run: ./configure.sh
    - name: build in DEBUG mode (retry 3 times because of flakey XamForms restore)
      # TODO: remove retry when we migrate to .NET6
      run: make || make || make || make
    - name: sanity check
      run: make sanitycheck
    - name: unit tests
      run: make check
    - name: build in STRICT mode
      run: git clean -fdx && ./configure.sh && make strict
    - name: build in RELEASE mode
      run: git clean -fdx && ./configure.sh && make release
    - name: integration tests
      run: make update-servers

  conventions:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: false
        # needed because of commit-lint, see https://github.com/conventional-changelog/commitlint/issues/3376
        fetch-depth: 0
    - name: Install dependencies of commitlint
      run: sudo apt install --yes npm && npm install @commitlint/config-conventional
    - name: Pull our commitlint configuration
      run: sudo apt install wget && wget https://raw.githubusercontent.com/nblockchain/conventions/master/commitlint.config.ts
    - name: Validate current commit (last commit) with commitlint
      if: github.event_name == 'push'
      run: npx commitlint --from HEAD~1 --to HEAD --verbose
    - name: Validate PR commits with commitlint
      if: github.event_name == 'pull_request'
      run: npx commitlint --from ${{ github.event.pull_request.head.sha }}~${{ github.event.pull_request.commits }} --to ${{ github.event.pull_request.head.sha }} --verbose

  snap_pkg:

    needs:
    - conventions

    - linux22-github
    - linux22-github--newmono
    - linux22-vanilla--stockmono
    - linux22-vanilla--newmono
    - linux20-github
    - linux20-github--newmono
    - linux20-vanilla--stockmono
    - linux20-vanilla--newmono
    - windows
    - macOS

    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v1
    - name: Generate snap package
      run: |
        sudo apt update
        sudo ./scripts/install_mono_from_microsoft_deb_packages.sh
        ./scripts/install_snapcraft.sh
        # retry 3 times because of flakey nuget; TODO: remove retry when we migrate to .NET6
        ./scripts/snap_build.sh || ./scripts/snap_build.sh || ./scripts/snap_build.sh || ./scripts/snap_build.sh

    - name: Upload snap package to Snap Store
      env:
        SNAPCRAFT_LOGIN: ${{ secrets.SNAPCRAFT_LOGIN }}
      run: |
        sudo apt update
        ./scripts/snap_release.sh
